class Solution {
    public int trap(int[] height) {
       
        int left = 0;
        int right = height.length-1; //5
        int leftMax = 0;
        int rightMax = 0;
        int maxWater = 0;
        int currWater = 0;
        
        while(left < right){ //left=0,1,1, 2     right=5, 5, 4, 4 | 
            if(height[left]< height[right]){ //0<1 |
                leftMax = Math.max(leftMax, height[left]); //leftMx =0, 1 |
                currWater = leftMax - height[left]; //
                left++;   //1, 2
            }else{
                rightMax = Math.max(rightMax, height[right]); //1
                currWater = rightMax- height[right]; //0
                // maxWater+= currWater; //0
                right--;  //4
            }
             maxWater+= currWater; //0
        }
        return maxWater;
    }
}
