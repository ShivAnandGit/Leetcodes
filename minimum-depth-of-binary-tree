/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        
        if(root ==null) return 0;
        
        Queue<TreeNode> q = new LinkedList<>();
        
        q.add(root);
        
        int minDepth =0;
        
        while(!q.isEmpty()){
            int qSize = q.size();
            minDepth++;
            for(int i =0; i < qSize; i++){
                TreeNode current = q.poll();
                if(current.left==null && current.right==null){
                    return minDepth;
                }else{
                    if(current.left!=null) q.add(current.left);
                    if(current.right!=null) q.add(current.right);
                }
            }
            
        }
        return minDepth;
    }
}
